x = 1;

x = -x;
console.log( x ); // -1, применили унарный минус

x = 1, y = 3;
console.log( y - x ); // 2, бинарный минус вычитает значения


// Математика
// Поддерживаются следующие математические операторы:

// Сложение +,
// Вычитание -,
// Умножение *,
// Деление /,
// Взятие остатка от деления %,
// Возведение в степень **.


console.log( 4 ** (1/2) ); // 2 (степень 1/2 эквивалентна взятию квадратного корня)
console.log( 8 ** (1/3) ); // 2 (степень 1/3 эквивалентна взятию кубического корня)

let s = "моя" + "строка";
console.log(s); // моястрока

console.log( '1' + 2 ); // "12"
console.log( 2 + '1' ); // "21"

console.log( 6 - '2' ); // 4, '2' приводится к числу
console.log( '6' / '2' ); // 3, оба операнда приводятся к числам

// Не влияет на числа
let x = 1;
console.log( +x ); // 1

let y = -2;
console.log( +y ); // -2

// Преобразует не числа в числа
console.log( +true ); // 1
console.log( +"" );   // 0



apples = "2";
oranges = "3";

console.log( apples + oranges ); // "23", так как бинарный плюс объединяет строки
// Поэтому используем унарный плюс, чтобы преобразовать к числу:

let apples = "2";
let oranges = "3";

// оба операнда предварительно преобразованы в числа
console.log( +apples + +oranges ); // 5

// более длинный вариант
// console.log( Number(apples) + Number(oranges) ); // 5



// Приоритет	Название	Обозначение
// …	…	…
// 16	унарный плюс	+
// 16	унарный минус	-
// 15	возведение в степень	**
// 14	умножение	*
// 14	деление	/
// 13	сложение	+
// 13	вычитание	-
// …	…	…
// 3	присваивание	=
// …	…	…


a = 1;
b = 2;

c = 3 - (a = b + 1);

console.log( a ); // 3
console.log( c ); // 0



a = b = c = 2 + 2;

console.log( a ); // 4
console.log( b ); // 4
console.log( c ); // 4


let a = (1 + 2, 3 + 4);

console.log( a ); // 7 (результат вычисления 3 + 4)

// три операции в одной строке
for (a = 1, b = 3, c = a * b; a < 10; a++) {
 //...
}