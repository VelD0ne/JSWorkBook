let x = 1;

x = -x;
alert( x ); // -1, применили унарный минус

let x = 1, y = 3;
alert( y - x ); // 2, бинарный минус вычитает значения


Математика
Поддерживаются следующие математические операторы:

Сложение +,
Вычитание -,
Умножение *,
Деление /,
Взятие остатка от деления %,
Возведение в степень **.


alert( 4 ** (1/2) ); // 2 (степень 1/2 эквивалентна взятию квадратного корня)
alert( 8 ** (1/3) ); // 2 (степень 1/3 эквивалентна взятию кубического корня)

let s = "моя" + "строка";
alert(s); // моястрока

alert( '1' + 2 ); // "12"
alert( 2 + '1' ); // "21"

alert( 6 - '2' ); // 4, '2' приводится к числу
alert( '6' / '2' ); // 3, оба операнда приводятся к числам

// Не влияет на числа
let x = 1;
alert( +x ); // 1

let y = -2;
alert( +y ); // -2

// Преобразует не числа в числа
alert( +true ); // 1
alert( +"" );   // 0



let apples = "2";
let oranges = "3";

alert( apples + oranges ); // "23", так как бинарный плюс объединяет строки
Поэтому используем унарный плюс, чтобы преобразовать к числу:

let apples = "2";
let oranges = "3";

// оба операнда предварительно преобразованы в числа
alert( +apples + +oranges ); // 5

// более длинный вариант
// alert( Number(apples) + Number(oranges) ); // 5



Приоритет	Название	Обозначение
…	…	…
16	унарный плюс	+
16	унарный минус	-
15	возведение в степень	**
14	умножение	*
14	деление	/
13	сложение	+
13	вычитание	-
…	…	…
3	присваивание	=
…	…	…


let a = 1;
let b = 2;

let c = 3 - (a = b + 1);

alert( a ); // 3
alert( c ); // 0

let a, b, c;

a = b = c = 2 + 2;

alert( a ); // 4
alert( b ); // 4
alert( c ); // 4


let a = (1 + 2, 3 + 4);

alert( a ); // 7 (результат вычисления 3 + 4)

// три операции в одной строке
for (a = 1, b = 3, c = a * b; a < 10; a++) {
 ...
}